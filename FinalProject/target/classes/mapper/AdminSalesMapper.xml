<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.FinalProject.mapper.AdminSalesMapper">

	<select id="getAdminSales" resultType="AdminSalesDto">
	  SELECT admin_sale_id, user_id, TO_CHAR(cre_date, 'YYYY-MM-DD') AS cre_date, TO_CHAR(edit_date, 'YYYY-MM-DD') AS edit_date, sale_name, price, cd_acode, cd_bcode, auto
	  FROM tb_admin_sale
	  ORDER BY cre_date DESC
	</select>

	<select id="getAdminSalesList" parameterType="map" resultType="AdminSalesDto">
	    SELECT *
	    FROM (select result1.*, rownum as rnum
	    	  from
	    	  		(select admin_sale_id, user_id, TO_CHAR(cre_date, 'YYYY-MM-DD') AS cre_date, TO_CHAR(edit_date, 'YYYY-MM-DD') AS edit_date, sale_name, price, cd_acode, cd_bcode, auto
	    	  		 from tb_admin_sale
		            <where>
		                <if test="user_id != null and user_id != ''">
		                    AND user_id LIKE '%' || #{user_id} || '%'
		                </if>
		                <if test="checkedItems != null and checkedItems.size() > 0">
		                    AND cd_bcode IN
		                    <foreach item="cd_bcode" collection="checkedItems" open="(" separator="," close=")">
		                        #{cd_bcode}
		                    </foreach>
		                </if>
		            </where>
	    	  		 order by admin_sale_id) result1	    	  
	    	  )
	    where rnum between #{startRowNum} and #{endRowNum}
	</select>
	<select id="getCountDefault" resultType="int">
	    SELECT COUNT(*) FROM tb_admin_sale
	</select>
	<select id="getCount" parameterType="map" resultType="int">
		  SELECT COUNT(*)
		    FROM tb_admin_sale 
		    <where>
		        <if test="user_id != null and user_id != ''">
		            AND user_id LIKE '%' || #{user_id} || '%'
		        </if>
		        <if test="checkedItems != null and checkedItems.size() > 0">
		            AND cd_bcode IN
		            <foreach item="cd_bcode" collection="checkedItems" open="(" separator="," close=")">
		                #{cd_bcode}
		            </foreach>
		        </if>
		    </where>
	</select>
	<select id="getAdminSaleById" parameterType="int" resultType="AdminSalesDto">
		select * from tb_admin_sale
		where admin_sale_id=#{admin_sale_id}
	</select>
	<insert id="insertAdminSales" parameterType="AdminSalesDto">
		insert into tb_admin_sale
		(admin_sale_id, user_id, cre_date, edit_date, sale_name, price, cd_acode, cd_bcode, auto)
		values 
		(seq_admin_sale_id.nextval, #{user_id}, sysdate, sysdate, #{sale_name}, #{price}, #{cd_acode}, #{cd_bcode}, 'NO' )				
	</insert>
	<update id="editAdminSales">
		update tb_admin_sale
		set (user_id=#{user_id}, edit_date=sysdate, sale_name=#{sale_name}, 
		     price=#{price}, cd_acode=#{cd_acode}, cd_bcode=#{cd_bcode}, auto='NO')
		where admin_sale_id=#{admin_sale_id}
	</update>
	<delete id="deleteAdminSales">
		delete from tb_admin_sale
		where admin_sale_id=#{admin_sale_id}
	</delete>

	<insert id="insertOrderApprovedCost">
		insert into tb_admin_sale
		(admin_sale_id, user_id,cre_date,edit_date, sale_name,price, cd_acode, cd_bcode,auto)
		values 
		(seq_admin_sale_id.nextval,#{user_id}, sysdate, sysdate, #{sale_name}, #{price}, #{cd_acode}, #{cd_bcode}, 'YES') 
	</insert>
	<select id="getApprovedOrderId" parameterType="String" resultType="int">
	  SELECT order_id
	  FROM tb_order 
	  WHERE status = #{status}
	</select>
	<select id="getOrderDetailByOrderId" resultType="int">
	  SELECT order_detail_id, product_id, quantity, price, quantity*price as calprice
	  FROM tb_order_detail 
	  WHERE order_id = #{order_id}
	</select>
	<select id="getNameByProductId" resultType="string">
	  SELECT product_id, product_name
	  FROM tb_class 
	  WHERE product_id = #{product_id}
	</select>
	<insert id="insertClsIngProfit">
		insert into tb_admin_sale
		(admin_sale_id, user_id,cre_date,edit_date, sale_name,price, cd_acode, cd_bcode,auto)
		values 
		(seq_admin_sale_id.nextval,#{user_id}, sysdate, sysdate, #{sale_name}, #{price}, #{cd_acode}, #{cd_bcode}, 'YES') 
	</insert>
	<select id="getIngClassId" parameterType="String" resultType="SalesDto">
	  SELECT class_id, price, status 
	  FROM tb_class 
	  WHERE status = #{status}
	</select>
	<select id="getProfitByClassId" resultType="int">
	  SELECT sc.class_id, COUNT(*) as student_count, c.price, COUNT(*)*c.price as profit  
	  FROM tb_student_class sc
	  Inner Join tb_class c on sc.class_id=c.class_id
	  WHERE sc.class_id= #{class_id}
	  group by sc.class_id
	</select>
	<select id="getNameByClassId" resultType="string">
	  SELECT class_name 
	  FROM tb_class 
	  WHERE class_id = #{class_id}
	</select>
	

	<select id="getSYear">
		select to_CHAR(cre_date,'YYYY) syear, user_id
		from tb_admin_sale 
		where user_id =#{user_id}
		group by to_char(cre_date,'YYYY')
	</select>
	<select id="getSMonth">
		select to_CHAR(cre_date,'YYYY') syear, to_char(cre_date, 'YYYY-MM') smonth, user_id
		from tb_admin_sale 
		where user_id=#{user_id} and to_char(cre_date,'YYYY')=#{syear}
		group by to_char(cre_date,'MM')
	</select>
	<select id="getAdminProfitStatByYear" parameterType="String" resultType="int">
	 	select to_CHAR(cre_date,'YYYY') syear, to_char(cre_date,'YYYY-MM') smonth, user_id, sum(price)
	 	from tb_admin_sale	 	
	 	where user_id=#{user_id} and cd_acode='PROFIT' and to_char(cre_date, 'YYYY')=#{syear}
	 	group by user_id, to_char(cre_date, 'YYYY-MM')
	 	order by smonth
	</select>
	<select id="getAdminCostStatByYear" parameterType="String" resultType="int">
	 	select to_CHAR(cre_date,'YYYY') syear, to_char(cre_date,'YYYY-MM') smonth, user_id, sum(price)
	 	from tb_admin_sale	 	
	 	where user_id=#{user_id} and cd_acodes='COST' and to_char(cre_date, 'YYYY')=#{syear}
	 	group by user_id, to_char(cre_date, 'YYYY-MM')
	 	order by smonth
	</select>
	<select id="getAdminSalesStatByLectYearly" parameterType="String" resultType="int">
		SELECT 
	        TO_CHAR(c.start_date, 'YYYY') AS syear, c.cd_lecture, b.bname AS lecture_name, COUNT(sc.student_id) AS student_count, c.price,                              
	        COUNT(sc.student_id) * c.price AS total
	    FROM tb_class c
	    LEFT JOIN tb_student_class sc ON c.class_id = sc.class_id 
	    LEFT JOIN tb_bcode b ON c.cd_lecture = b.bcode              
	    WHERE c.user_id = #{user_id} AND b.acode = 'LECTURE' AND c.cd_status != 'CANCEL'
	    GROUP BY c.cd_lecture, b.bname, c.price                  
	    ORDER BY c.cd_lecture   
	</select>
	<select id="getAdminSalesStatByLectMonthly" parameterType="String" resultType="int">
		SELECT 
		    TO_CHAR(c.start_date, 'YYYY-MM') AS smonth, c.cd_lecture, b.bname AS lecture_name,
		    COUNT(sc.student_id) AS student_count, c.price, COUNT(sc.student_id) * c.price AS total_revenue
		FROM tb_class c
		LEFT JOIN tb_student_class sc ON c.class_id = sc.class_id 
		LEFT JOIN tb_bcode b ON c.cd_lecture = b.bcode
		WHERE c.user_id = #{user_id}  AND b.acode = 'LECTURE' AND c.cd_status != 'CANCEL'
		GROUP BY TO_CHAR(c.start_date, 'YYYY-MM'), c.cd_lecture, b.bname, c.price
		ORDER BY sales_month, c.cd_lecture  
	</select>
</mapper>